terraform {
  required_providers {
    fastly = {
      source  = "fastly/fastly"
      version = ">= 0.41.0"
    }
  }
}

provider "fastly" {
  api_key = var.fastly_api_key
}

resource "fastly_service_vcl" "www-marketcircle-dev" {
  name = "www.marketcircle.dev"

  domain {
    name = "marketcircle.dev"
  }
  domain {
    name = "www.marketcircle.dev"
  }

  activate = true

  ##
  # Backends
  ##
  backend {
    ## 
    # DO NOT RENAME THIS BACKEND
    # This was the first backend that was created so it is the default.
    #
    name              = "mc-corona-static-dev"
    address           = "www.dev.marketcircle.dev"
    override_host     = "www.dev.marketcircle.dev"
    port              = 443
    ssl_cert_hostname = "www.dev.marketcircle.dev"
    ssl_check_cert    = true
    ssl_sni_hostname  = "www.dev.marketcircle.dev"
    use_ssl           = true
  }

  backend {
    name              = "DigitalOcean Spaces Learn"
    address           = "marketcircle-learn-beta.nyc3.digitaloceanspaces.com"
    port              = 443
    ssl_cert_hostname = "marketcircle-learn-beta.nyc3.digitaloceanspaces.com"
    ssl_check_cert    = true
    ssl_sni_hostname  = "marketcircle-learn-beta.nyc3.digitaloceanspaces.com"
    use_ssl           = true
    weight            = 100
  }

  condition {
    name = "Blog"
    statement = "req.url ~ \"/blog(/|$)(.*)\""
    type = "CACHE"
  }

  cache_setting {
    name = "Don't cache the Blog"
    cache_condition = "Blog"
    action = "pass"
  }

  header {
    name        = "Generated by force TLS and enable HSTS"
    action      = "set"
    destination = "http.Strict-Transport-Security"
    source      = "\"max-age=300\""
    type        = "response"
  }

  request_setting {
    action           = ""
    bypass_busy_wait = false
    default_host     = ""
    force_miss       = false
    force_ssl        = true

    hash_keys         = ""
    max_stale_age     = 0
    name              = "Generated by force TLS and enable HSTS"
    request_condition = ""
    timer_support     = false
    xff               = ""
  }


  ##
  # Snippets
  ##

  snippet {
    name    = "Auth Rejection"
    type    = "error"
    content = file("${path.module}/snippets/auth-rejection.vcl")
  }

  snippet {
    name    = "Auth Request"
    type    = "recv"
    content = file("${path.module}/snippets/auth-request.vcl")
    priority = 1
  }

  snippet {
    name    = "Basic Auth Credentials"
    type    = "init"
    content = file("${path.module}/snippets/basic-auth-credentials.vcl")
  }

  snippet {
    name    = "Country Code Lookup"
    type    = "recv"
    content = file("${path.module}/snippets/country-code-lookup.vcl")
  }

  snippet {
    name    = "Deliver 404"
    type    = "deliver"
    content = file("${path.module}/snippets/deliver-404.vcl")
  }

  snippet {
    name    = "Fetch 404"
    type    = "recv"
    content = file("${path.module}/snippets/fetch-404.vcl")
  }

  snippet {
    name    = "Internal Errors"
    type    = "error"
    content = file("${path.module}/snippets/internal-errors.vcl")
  }

  snippet {
    name    = "Learn"
    type    = "recv"
    content = file("${path.module}/snippets/learn.vcl")
  }

  snippet {
    name     = "Redirects Dictionary"
    type     = "init"
    content  = file("${path.module}/snippets/redirects-dictionary.vcl")
    priority = 1
  }

  snippet {
    name     = "Redirects"
    type     = "recv"
    content  = file("${path.module}/snippets/redirects.vcl")
    priority = 10
  }

  snippet {
    name    = "Surrogate Keys"
    type    = "fetch"
    content = file("${path.module}/snippets/surrogate-keys.vcl")
  }

  snippet {
    name    = "Synthetic Responses"
    type    = "recv"
    content = file("${path.module}/snippets/synthetic-responses.vcl")
    priority = 99
  }

  snippet {
    name    = "Vary Header"
    type    = "deliver"
    content = file("${path.module}/snippets/vary-header.vcl")
  }

}

